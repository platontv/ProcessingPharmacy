
&НаКлиенте
Процедура Подклчюиться(Команда)
	
	ОтправитьЗапросНаСайт()
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЗапросНаСайт()
	
	Ответ = ВыполнитьHTTPЗапрос(АдресСайта+"/SocialPrograms/ActivePrograms");
	
 	КодОтвета = Ответ.Код;
	РезультатОтветаСайта.УстановитьТекст(Ответ.Текст);    
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаДанныхПоДоговарам(Команда)
	
	
	МассивКодовПоставщиков = Новый Массив;
	МассивКодовПоставщиков.Добавить(Новый Структура("ID,Code", "123546", "FE-4564"));
	
	ЭлементПредложения = Новый Структура;
	ЭлементПредложения.Вставить("Code", "ПР56454");
	ЭлементПредложения.Вставить("Name", "Офигительный препарат");
	ЭлементПредложения.Вставить("Producer", "Самый лучший");
	ЭлементПредложения.Вставить("VAT", 6);
	ЭлементПредложения.Вставить("SupplierCodes", МассивКодовПоставщиков);
	
	МассивПредложений = Новый Массив;
	МассивПредложений.Добавить(ЭлементПредложения);  
	
	Поставщик = Новый Структура;
	Поставщик.Вставить("ID","123546");
	Поставщик.Вставить("Name","Таблетки");
	Поставщик.Вставить("Edrpo","1235467891011");
	
	МассивПоставщиков = Новый Массив;
	МассивПоставщиков.Добавить(Поставщик);
	
	КорневаяСтруктура = Новый Структура;
	КорневаяСтруктура.Вставить("Offers", МассивПредложений);
	КорневаяСтруктура.Вставить("Suppliers", МассивПоставщиков);
	
	Ответ = ВыполнитьHTTPЗапрос(АдресСайта+"/Import/Ref/51374", ЗаписатьМассивВJSON(КорневаяСтруктура));
	
 	КодОтвета = Ответ.Код;
	РезультатОтветаСайта.УстановитьТекст(Ответ.Текст);    
	
КонецПроцедуры

Функция ВыполнитьHTTPЗапрос(ПолныйАдресРесурса, СтрокаТела = "") Экспорт
	
	СутркутураОтвета = Новый Структура("Код,Текст" , 0, "");
	
	СтруктураURI = СтруктураURI(ПолныйАдресРесурса); 
	
	Если СтруктураURI.Схема = "https" Тогда 
		ssl1 = Новый ЗащищенноеСоединениеOpenSSL(, Новый СертификатыУдостоверяющихЦентровWindows());
	Иначе 
		ssl1 = Неопределено;
	КонецЕсли;
	
	СтрокаBase64 =  ПолучитьBase64СтрокуИзДвоичныхДанных(ПолучитьДвоичныеДанныеИзСтроки("\test387\admin:E7FF"));
	СтрокаBase64 = СтрЗаменить(СтрокаBase64, Символы.ПС, "");
	СтрокаBase64 = СтрЗаменить(СтрокаBase64, Символы.ВК, "");

	ЗаголовокHTTP = Новый Соответствие();
	ЗаголовокHTTP.Вставить("Connection"		, "keep-alive");
	ЗаголовокHTTP.Вставить("Content-type"	, "application/json");
	ЗаголовокHTTP.Вставить("Authorization", "Basic " + СтрокаBase64);

	HTTPСоединение = Новый HTTPСоединение(СтруктураURI.Хост, СтруктураURI.Порт, , , , , ssl1);
	HTTPЗапрос = Новый HTTPЗапрос(СтруктураURI.ПутьНаСервере, ЗаголовокHTTP); 
	Если ЗначениеЗаполнено(СтрокаТела) Тогда 
		HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаТела, КодировкаТекста.UTF8);
	КонецЕсли;
	
	Попытка   
		Если ПустаяСтрока(СтрокаТела) Тогда
			Если СтруктураURI.Удалять Тогда 
				Результат = HTTPСоединение.Удалить(HTTPЗапрос);
			Иначе 
				Результат = HTTPСоединение.Получить(HTTPЗапрос);
			КонецЕсли;
		ИначеЕсли СтруктураURI.ПутьНаСервере = "product-update-qtysadd"  Тогда 
			Результат = HTTPСоединение.Записать(HTTPЗапрос);                                       
		Иначе 
			Результат = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);
		КонецЕсли;
	Исключение     
		// исключение здесь говорит о том, что запрос не дошел до HTTP-Сервера  
		ТекстОшибки = ОписаниеОшибки();
		Сообщить("Произошла сетевая ошибка!"); 
		Ответ = ТекстОшибки;
		ВызватьИсключение;
	КонецПопытки;
	СутркутураОтвета.Код = Результат.КодСостояния;
	Если Результат.КодСостояния >= 400 и Результат.КодСостояния < 500  Тогда
		СутркутураОтвета.Текст = Результат.ПолучитьТелоКакСтроку();
		Возврат СутркутураОтвета;
	КонецЕсли;
	Если Результат.КодСостояния >= 300 и Результат.КодСостояния < 400  Тогда
 		Если Результат.КодСостояния = 302 Тогда
			СутркутураОтвета.Текст = "Постоянное перенаправление.";
			АдресРесурса = Результат.Заголовки.Получить("Location");
			Если АдресРесурса <> Неопределено  Тогда
				СутркутураОтвета.Текст = ВыполнитьHTTPЗапрос(АдресРесурса);
			Иначе                  
				СутркутураОтвета.Текст = СутркутураОтвета.Текст + Символы.ПС + "Сервер не сообщил адрес ресурса!";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	// Статусы 1XX и 2XX считаем хорошими     
	Если Результат.КодСостояния < 300 Тогда
 		СутркутураОтвета.Текст = Результат.ПолучитьТелоКакСтроку();
	КонецЕсли;                   
	
	Возврат СутркутураОтвета;
	
Конецфункции  

Функция СтруктураURI(Знач СтрокаURI)
	
	СтрокаURI = СокрЛП(СтрокаURI);
	// схема  
	Схема = "";
	Позиция = Найти(СтрокаURI, "://");
	Если Позиция >0 Тогда
		Схема = НРег(Лев(СтрокаURI, Позиция - 1));
		СтрокаURI = Сред(СтрокаURI, Позиция + 3);
	КонецЕсли;
	// строка соединения и путь на сервере
	СтрокаСоединения = СтрокаURI;
	ПутьНаСервере = "";
	Позиция = Найти(СтрокаСоединения, "/");
	Если Позиция >0 Тогда
		ПутьНаСервере = Сред(СтрокаСоединения, Позиция + 1);
		СтрокаСоединения = Лев(СтрокаСоединения, Позиция - 1);
	КонецЕсли;
	//  информация   пользователя  и имя сервера  
	СтрокаАвторизации = "";
	ИмяСервера = СтрокаСоединения;
	Позиция = Найти(СтрокаСоединения, "@");
	Если Позиция >0 Тогда
		СтрокаАвторизации = Лев(СтрокаСоединения, Позиция - 1);
		ИмяСервера = Сред(СтрокаСоединения, Позиция + 1);
	КонецЕсли;
	// логин и пароль  
	Логин = СтрокаАвторизации;
	Пароль = "";
	Позиция = Найти(СтрокаАвторизации, ":");
	Если Позиция >0 Тогда
		Логин = Лев(СтрокаАвторизации, Позиция - 1);
		Пароль = Сред(СтрокаАвторизации, Позиция + 1);
	КонецЕсли;
	// хост и порт  
	Хост = ИмяСервера;
	Порт = "";
	Позиция = Найти(ИмяСервера, ":");
	Если Позиция >0 Тогда
		Хост = Лев(ИмяСервера, Позиция - 1);
		Порт = Сред(ИмяСервера, Позиция + 1);
	КонецЕсли;
	Удалять = Найти(СтрокаURI, "delete") <> 0;
	Результат = Новый Структура;
	Результат.Вставить("Удалять", Удалять);
	Результат.Вставить("Схема", Схема);
	Результат.Вставить("Логин", Логин);
	Результат.Вставить("Пароль", Пароль);
	Результат.Вставить("ИмяСервера", ИмяСервера);
	Результат.Вставить("Хост", Хост);
	Результат.Вставить("Порт", ?(Порт <> "", Число(Порт), Неопределено));
	Результат.Вставить("ПутьНаСервере", ПутьНаСервере);
	
	Возврат Результат;
	
КонецФункции

Функция ЗаписатьМассивВJSON(МассивСтруктура, Отказ = Ложь, ТекстОшибки = "") Экспорт
	
	Результат = "";
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, МассивСтруктура);   
	Результат = ЗаписьJSON.Закрыть();           
	
	Возврат Результат;

КонецФункции

Функция ПрочитатьМассивИзJSON(СтрокаМассивСтруктура, Отказ = Ложь, ТекстОшибки = "") Экспорт
	
	Результат = Неопределено;
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(СтрокаМассивСтруктура);
	Результат = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	
	Возврат Результат;

КонецФункции


АдресСайта = "https://import.tabletki.ua";